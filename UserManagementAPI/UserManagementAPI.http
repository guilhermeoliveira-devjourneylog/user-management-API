@UserManagementAPI_HostAddress = http://localhost:5011
# @UserManagementAPI_HostAddress = https://localhost:7160
@AuthorizationToken = Bearer <Your_JWT_Token>

### Register a new user (Login)
POST {{UserManagementAPI_HostAddress}}/api/auth/login
Authorization: {{AuthorizationToken}}
Content-Type: application/json

{
  "username": "admin",
  "password": "password"
}

### Retrieve all users
GET {{UserManagementAPI_HostAddress}}/api/users
Accept: application/json
Authorization: {{AuthorizationToken}}

### Test unauthorized access
GET {{UserManagementAPI_HostAddress}}/api/users
Accept: application/json
Authorization: Bearer InvalidToken

### Retrieve a user by ID
GET {{UserManagementAPI_HostAddress}}/api/users/1
Accept: application/json
Authorization: {{AuthorizationToken}}

### Create a new user (success)
POST {{UserManagementAPI_HostAddress}}/api/users
Content-Type: application/json
Accept: application/json
Authorization: {{AuthorizationToken}}

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "john.doe@example.com",
  "department": "IT"
}

### Create a new user (failure: invalid input)
POST {{UserManagementAPI_HostAddress}}/api/users
Content-Type: application/json
Accept: application/json
Authorization: {{AuthorizationToken}}

{
  "firstName": "",
  "lastName": "Doe",
  "email": "invalid-email",
  "department": "IT"
}

### Update an existing user
PUT {{UserManagementAPI_HostAddress}}/api/users/1
Content-Type: application/json
Accept: application/json
Authorization: {{AuthorizationToken}}

{
  "id": 1,
  "firstName": "John",
  "lastName": "Smith",
  "email": "john.smith@example.com",
  "department": "Engineering"
}

### Delete a user by ID (success)
DELETE {{UserManagementAPI_HostAddress}}/api/users/1
Authorization: {{AuthorizationToken}}

### Delete a user by ID (failure: non-existent user)
DELETE {{UserManagementAPI_HostAddress}}/api/users/999
Authorization: {{AuthorizationToken}}
